apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bleachdle.fullname" . }}
  labels:
    {{- include "bleachdle.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "bleachdle.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bleachdle.selectorLabels" . | nindent 8 }}
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/tls-skip-verify: "true"
        vault.hashicorp.com/role: "{{ .Values.vault.role }}"
        vault.hashicorp.com/agent-inject-secret-app: "{{ .Values.vault.secretPath }}"
        vault.hashicorp.com/agent-inject-template-app: |
          {{`{{- with secret "bleach/data/app" -}}`}}
          export DB_HOST={{`{{ .Data.data.db_host }}`}}
          export DB_USER={{`{{ .Data.data.db_user }}`}}
          export DB_PASSWORD={{`{{ .Data.data.db_password }}`}}
          export DB_NAME={{`{{ .Data.data.db_name }}`}}
          export API_URL={{`{{ .Data.data.api_url }}`}}
          {{`{{- end }}`}}
    spec:
      serviceAccountName: bleachdle-sa
      initContainers:
        - name: configure-vault-auth
          image: hashicorp/vault
          command:
            - "/bin/sh"
            - "-c"
            - |
              echo "Fetching service account token..."
              SA_JWT_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
              KUBE_CA_CERT=$(cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt)

              echo "Logging into Vault..."
              export VAULT_ADDR=http://vault.vault.svc:8200
              vault login -method=token token=root

              echo "Configuring Vault Kubernetes auth backend..."
              vault write auth/kubernetes/config \
                token_reviewer_jwt="$SA_JWT_TOKEN" \
                kubernetes_host="https://kubernetes.default.svc.cluster.local" \
                kubernetes_ca_cert="$KUBE_CA_CERT" \
                issuer="https://kubernetes.default.svc.cluster.local"

              vault write auth/kubernetes/role/bleachdle-role \
                bound_service_account_names=bleachdle-sa \
                bound_service_account_namespaces=default \
                policies=bleachdle-policy \
                ttl=1h
      containers:
        - name: vault-sidecar  # ✅ Keeping a separate sidecar for Vault
          image: "hashicorp/vault:1.13.1"
          command: ["/bin/sh"]
          args:
            - "-ec"
            - |
              while ! curl -fsSL http://vault.vault.svc:8200/v1/sys/health; do
                echo "Waiting for Vault..."
                sleep 5
              done
              echo ${VAULT_CONFIG?} | base64 -d > /home/vault/config.json && vault agent -config=/home/vault/config.json
          volumeMounts:
            - name: vault-sidecar-secrets  # ✅ Renamed to avoid duplicate volume mount
              mountPath: /vault/secrets-sidecar

        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          command: ["/bin/sh"]
          args:
            - "-c"
            - "source /vault/secrets/app && exec python app.py"
          volumeMounts:
            - name: vault-app-secrets  # ✅ Using a separate volume for the app container
              mountPath: /vault/secrets

      volumes:
        - name: vault-sidecar-secrets  # ✅ Separate volume for Vault sidecar
          emptyDir: {}

        - name: vault-app-secrets  # ✅ Separate volume for main app
          emptyDir: {}
