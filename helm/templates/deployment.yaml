# Updated deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bleachdle.fullname" . }}
  labels:
    {{- include "bleachdle.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "bleachdle.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bleachdle.selectorLabels" . | nindent 8 }}
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/tls-skip-verify: "true"
        vault.hashicorp.com/role: "{{ .Values.vault.role }}"
        vault.hashicorp.com/agent-inject-secret-app: "bleach/data/app"
        vault.hashicorp.com/agent-inject-template-app: |
          {{`{{- with secret "bleach/data/app" -}}`}}
          export DB_HOST={{`{{ .Data.data.db_host }}`}}
          export DB_USER={{`{{ .Data.data.db_user }}`}}
          export DB_PASSWORD={{`{{ .Data.data.db_password }}`}}
          export DB_NAME={{`{{ .Data.data.db_name }}`}}
          export API_URL={{`{{ .Data.data.api_url }}`}}
          {{`{{- end }}`}}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      initContainers:
        - name: configure-vault-auth
          image: hashicorp/vault
          command:
            - "/bin/sh"
            - "-c"
            - |
              vault write auth/kubernetes/config \
                token_reviewer_jwt=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token) \
                kubernetes_host=$KUBERNETES_HOST \
                kubernetes_ca_cert=$(cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt) \
                issuer="https://kubernetes.default.svc.cluster.local"
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          command: ["/bin/sh"]
          args:
            - "-c"
            - "source /vault/secrets/app && exec python app.py"
